{"version":3,"file":"background.ts.js","sources":["../../src/runtime/extension/background/background.ts"],"sourcesContent":["console.log(\"background is running\");\n\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n\n  /* if token requested, fetch and send back */\n  if (request.type === \"get token\") {\n    (async () => {\n      const data = await chrome.storage.local.get(\"token\");\n      const token = data[\"token\"] ?? null;\n      sendResponse(token);\n    })();\n    return true;\n  }\n\n  /* if token provided, save for future use */\n  else if (request.type === \"set token\") {\n    chrome.storage.local.set({ token: request.token });\n  }\n\n  else if(request.type === \"get setting\"){\n    (async () => {\n      const data = await chrome.storage.local.get(request.key as string);\n      let item = data[request.key] ?? null;\n      if(item === \"_undefined_\") item = undefined;\n      sendResponse(item);\n    })();\n    return true;\n  }\n\n  else if(request.type === \"set setting\"){\n\n    /* map undefined to string */\n    if(request.value === undefined) request.value = \"_undefined_\";\n    chrome.storage.local.set({ [request.key]: request.value });\n  }\n});"],"names":[],"mappings":"AAAA,QAAQ,IAAI,uBAAuB;AAEnC,OAAO,QAAQ,UAAU,YAAY,CAAC,SAAS,QAAQ,iBAAiB;AAGlE,MAAA,QAAQ,SAAS,aAAa;AAChC,KAAC,YAAY;AACX,YAAM,OAAO,MAAM,OAAO,QAAQ,MAAM,IAAI,OAAO;AAC7C,YAAA,QAAQ,KAAK,OAAO,KAAK;AAC/B,mBAAa,KAAK;AAAA,IAAA;AAEb,WAAA;AAAA,EAAA,WAIA,QAAQ,SAAS,aAAa;AACrC,WAAO,QAAQ,MAAM,IAAI,EAAE,OAAO,QAAQ,OAAO;AAAA,EAAA,WAG3C,QAAQ,SAAS,eAAc;AACrC,KAAC,YAAY;AACX,YAAM,OAAO,MAAM,OAAO,QAAQ,MAAM,IAAI,QAAQ,GAAa;AACjE,UAAI,OAAO,KAAK,QAAQ,GAAG,KAAK;AAC7B,UAAA,SAAS,cAAsB,QAAA;AAClC,mBAAa,IAAI;AAAA,IAAA;AAEZ,WAAA;AAAA,EAAA,WAGD,QAAQ,SAAS,eAAc;AAGrC,QAAG,QAAQ,UAAU,OAAW,SAAQ,QAAQ;AACzC,WAAA,QAAQ,MAAM,IAAI,EAAE,CAAC,QAAQ,GAAG,GAAG,QAAQ,MAAA,CAAO;AAAA,EAC3D;AACF,CAAC;"}