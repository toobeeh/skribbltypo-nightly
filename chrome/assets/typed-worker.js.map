{"version":3,"file":"typed-worker.js","sources":["../../src/util/color.ts","../../src/worker/typed-worker.ts"],"sourcesContent":["export class Color {\n\n  public static readonly skribblColors = [\n    [255, 255, 255],\n    [0, 0, 0],\n    [193, 193, 193],\n    [80, 80, 80],\n    [239, 19, 11],\n    [116, 11, 7],\n    [255, 113, 0],\n    [194, 56, 0],\n    [255, 228, 0],\n    [232, 162, 0],\n    [0, 204, 0],\n    [0, 70, 25],\n    [0, 255, 145],\n    [0, 120, 93],\n    [0, 178, 255],\n    [0, 86, 158],\n    [35, 31, 211],\n    [14, 8, 101],\n    [163, 0, 186],\n    [85, 0, 105],\n    [223, 105, 167],\n    [135, 53, 84],\n    [255, 172, 142],\n    [204, 119, 77],\n    [160, 82, 45],\n    [99, 48, 13]\n  ] as const;\n\n  get r() { return this._r; }\n  get g() { return this._g; }\n  get b() { return this._b; }\n\n  constructor(private _r: number, private _g: number, private _b: number, private _a?: number) { }\n\n  // get the rgb string of the color\n  get rgbString() {\n    return \"rgb(\" + [this._r, this._g, this._b, this._a].filter(v => v !== undefined).join(\",\") + \")\";\n  }\n\n  get rgbArray() {\n    return this._a ? [this._r, this._g, this._b, this._a] : [this._r, this._g, this._b];\n  }\n\n  // get the rgb values of the color\n  get rgb() {\n    return {\n      r: this._r,\n      g: this._g,\n      b: this._b,\n      a: this._a\n    };\n  }\n\n  // get the hex string of the color\n  get hex() {\n    return \"#\" +\n      this._r.toString(16).padStart(2, \"0\") +\n      this._g.toString(16).padStart(2, \"0\") +\n      this._b.toString(16).padStart(2, \"0\") +\n      (this._a ? Math.floor(255 * this._a).toString(16).padStart(2, \"0\") : \"\");\n  }\n\n  set hex(hex: string) {\n    const color = Color.fromHex(hex);\n    this._r = color._r;\n    this._g = color._g;\n    this._b = color._b;\n    this._a = color._a;\n  }\n\n  /**\n   * The atttempted skribbl color code\n   * If not found, return tyopo code instead (hex val + 10000)\n   */\n  get skribblCode() {\n\n    /* try to convert to original skribbl color */\n    const skribblIndex = Color.skribblColors.findIndex(c => c[0] === this._r && c[1] === this._g && c[2] === this._b);\n    if(skribblIndex !== -1) return skribblIndex;\n\n    return this.typoCode;\n  }\n\n  /**\n   * The color code for the typo color (hex val + 10000)\n   */\n  get typoCode() {\n\n    const hexString = ((this._r << 16) | (this._g << 8) | this._b).toString(16).toUpperCase();\n    return parseInt(hexString, 16) + 10000; // 10000 is the offset to identify that color index is a hex code\n  }\n\n  //source: https://gist.github.com/mjackson/5311256\n  get hsl(): [number, number, number, number] | [number, number, number] {\n    const r = this.r / 255, g = this.g / 255, b = this.b / 255;\n    const max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s = 0;\n    const l = (max + min) / 2;\n\n    if (max == min) {\n      h = s = 0; // achromatic\n    } else {\n      const d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n      }\n      h /= 6;\n    }\n    return this._a !== undefined ? [h*360, s * 100, l * 100, this._a] : [h*360, s * 100, l * 100];\n  }\n\n  // Convert to HSV\n  get hsv() {\n    const r = this.r / 255, g = this.g / 255, b = this.b / 255;\n    const max = Math.max(r, g, b), min = Math.min(r, g, b);\n    const delta = max - min;\n\n    let h = 0, s = 0;\n    const v = max;\n\n    if (max !== 0) {\n      s = delta / max;\n    } else {\n      h = 0;\n      s = 0;\n    }\n\n    if (max !== min) {\n      switch (max) {\n        case r: h = (g - b) / delta + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / delta + 2; break;\n        case b: h = (r - g) / delta + 4; break;\n      }\n      h /= 6;\n    }\n\n    return [h * 360, s * 100, v * 100, this._a];\n  }\n\n  static fromRgb(r: number, g: number, b: number, a?: number) {\n    return new Color(Math.round(r), Math.round(g), Math.round(b), a ? Math.round(a*100)/100 : undefined);\n  }\n\n  static fromHex(hex: string) {\n    if (hex[0] == \"#\") hex = hex.substring(1);\n    const r = Math.round(parseInt(\"0x\" + hex.substring(0, 2)));\n    const g = Math.round(parseInt(\"0x\" + hex.substring(2, 4)));\n    const b = Math.round(parseInt(\"0x\" + hex.substring(4, 6)));\n    const a = hex.length > 6 ? Math.round(parseInt(\"0x\" + hex.substring(6, 8))) : undefined;\n    return new Color(r, g, b, a);\n  }\n\n  static fromRgbString(rgb: string) {\n    const rgbs = rgb.trim().replace(\" \", \"\").split(\",\");\n    const r = parseInt(rgbs[0].replace(/[^\\d]/g, \"\"), 10);\n    const g = parseInt(rgbs[1].replace(/[^\\d]/g, \"\"), 10);\n    const b = parseInt(rgbs[2].replace(/[^\\d]/g, \"\"), 10);\n    const a = rgbs.length > 3 ? parseInt(rgbs[4].replace(/[^\\d]/g, \"\"), 10) : undefined;\n    return new Color(r, g, b, a);\n  }\n\n  static fromSkribblCode(code: number) {\n    if (code < 10000) {\n      const rgb = Color.skribblColors[code];\n      return Color.fromRgb(rgb[0], rgb[1], rgb[2]);\n    }\n    const hex = (code - 10000).toString(16).padStart(6, \"0\");\n    return Color.fromHex(hex);\n  }\n\n  // source: https://stackoverflow.com/questions/36721830/convert-hsl-to-rgb-and-hex\n  static fromHsl(h: number, s: number, l: number, alpha?: number) {\n    s /= 100;\n    l /= 100;\n\n    const k = (n: number) => (n + h / 30) % 12;\n    const a = s * Math.min(l, 1 - l);\n    const f = (n: number) =>\n      l - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)));\n\n    const r = Math.round(f(0) * 255);\n    const g = Math.round(f(8) * 255);\n    const b = Math.round(f(4) * 255);\n    return new Color(r, g, b, alpha);\n  }\n\n  // Static factory method for HSV to RGB conversion\n  static fromHsv(h: number, s: number, v: number, a?: number) {\n    s /= 100;\n    v /= 100;\n    const c = v * s;\n    const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n    const m = v - c;\n    let r = 0, g = 0, b = 0;\n\n    if (0 <= h && h < 60) {\n      r = c; g = x; b = 0;\n    } else if (60 <= h && h < 120) {\n      r = x; g = c; b = 0;\n    } else if (120 <= h && h < 180) {\n      r = 0; g = c; b = x;\n    } else if (180 <= h && h < 240) {\n      r = 0; g = x; b = c;\n    } else if (240 <= h && h < 300) {\n      r = x; g = 0; b = c;\n    } else if (300 <= h && h < 360) {\n      r = c; g = 0; b = x;\n    }\n\n    r = Math.round((r + m) * 255);\n    g = Math.round((g + m) * 255);\n    b = Math.round((b + m) * 255);\n\n    return new Color(r, g, b, a);\n  }\n\n  copy() {\n    return new Color(this._r, this._g, this._b, this._a);\n  }\n\n  withAlpha(a: number) {\n    this._a = a;\n    return this;\n  }\n}","// eslint-disable-next-line\nexport type TypedWorkerDefinition = Record<string, (...args: any[]) => any>;\n\nexport class TypedWorkerExecutor<TWorker extends TypedWorkerDefinition, TParentDefinition extends TypedWorkerDefinition>{\n\n  private _worker: Worker;\n\n  constructor(workerUrl: string, private _parent: TParentDefinition){\n    this._worker = new Worker(workerUrl, { type: \"module\" });\n\n    this._worker.addEventListener(\"message\", (event) => {\n      const { type, methodName, args } = event.data;\n      if(type === \"notification\"){\n        this._parent[methodName](...args);\n      }\n    });\n  }\n\n  public async run<T extends keyof TWorker>(methodName: T, ...args: Parameters<TWorker[T]>): Promise<ReturnType<TWorker[T]>>{\n    return new Promise((resolve) => {\n      const messageId = Math.random().toString(36).slice(10);\n      this._worker.addEventListener(\"message\", (event) => {\n        if(event.data.messageId === messageId && event.data.type === \"result\"){\n          resolve(event.data.result);\n        }\n      });\n      this._worker.postMessage({ methodName, args, messageId });\n    });\n  }\n}\n\nexport class TypedWorker<TWorkerDefinition extends TypedWorkerDefinition, TParentDefinition extends TypedWorkerDefinition>{\n  constructor(private worker: TWorkerDefinition){\n    addEventListener(\"message\", async (event) => {\n      const { methodName, args, messageId } = event.data;\n      const result = await this.worker[methodName](...args);\n      postMessage({ type: \"result\", messageId, result });\n    });\n  }\n\n  send<T extends keyof TParentDefinition>(methodName: T, ...args: Parameters<TParentDefinition[T]>): void{\n    postMessage({ type: \"notification\", methodName, args });\n  }\n}"],"names":[],"mappings":"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"}