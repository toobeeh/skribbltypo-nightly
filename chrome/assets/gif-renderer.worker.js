var __defProp=Object.defineProperty;var __defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});var __publicField=(obj,key,value)=>__defNormalProp(obj,typeof key!="symbol"?key+"":key,value);const _Color=class _Color{constructor(_r,_g,_b,_a){this._r=_r,this._g=_g,this._b=_b,this._a=_a}get r(){return this._r}get g(){return this._g}get b(){return this._b}get rgbString(){return"rgb("+[this._r,this._g,this._b,this._a].filter(v=>v!==void 0).join(",")+")"}get rgbArray(){return this._a?[this._r,this._g,this._b,this._a]:[this._r,this._g,this._b]}get rgb(){return{r:this._r,g:this._g,b:this._b,a:this._a}}get hex(){return"#"+this._r.toString(16).padStart(2,"0")+this._g.toString(16).padStart(2,"0")+this._b.toString(16).padStart(2,"0")+(this._a?Math.floor(255*this._a).toString(16).padStart(2,"0"):"")}set hex(hex){const color=_Color.fromHex(hex);this._r=color._r,this._g=color._g,this._b=color._b,this._a=color._a}get skribblCode(){const skribblIndex=_Color.skribblColors.findIndex(c=>c[0]===this._r&&c[1]===this._g&&c[2]===this._b);return skribblIndex!==-1?skribblIndex:this.typoCode}get typoCode(){const hexString=(this._r<<16|this._g<<8|this._b).toString(16).toUpperCase();return parseInt(hexString,16)+1e4}get hsl(){const r=this.r/255,g=this.g/255,b=this.b/255,max=Math.max(r,g,b),min=Math.min(r,g,b);let h=0,s=0;const l=(max+min)/2;if(max==min)h=s=0;else{const d=max-min;switch(s=l>.5?d/(2-max-min):d/(max+min),max){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4;break}h/=6}return this._a!==void 0?[h*360,s*100,l*100,this._a]:[h*360,s*100,l*100]}get hsv(){const r=this.r/255,g=this.g/255,b=this.b/255,max=Math.max(r,g,b),min=Math.min(r,g,b),delta=max-min;let h=0,s=0;const v=max;if(max!==0?s=delta/max:(h=0,s=0),max!==min){switch(max){case r:h=(g-b)/delta+(g<b?6:0);break;case g:h=(b-r)/delta+2;break;case b:h=(r-g)/delta+4;break}h/=6}return[h*360,s*100,v*100,this._a]}static fromRgb(r,g,b,a){return new _Color(Math.round(r),Math.round(g),Math.round(b),a?Math.round(a*100)/100:void 0)}static fromHex(hex){hex[0]=="#"&&(hex=hex.substring(1));const r=Math.round(parseInt("0x"+hex.substring(0,2))),g=Math.round(parseInt("0x"+hex.substring(2,4))),b=Math.round(parseInt("0x"+hex.substring(4,6))),a=hex.length>6?Math.round(parseInt("0x"+hex.substring(6,8))):void 0;return new _Color(r,g,b,a)}static fromRgbString(rgb){const rgbs=rgb.trim().replace(" ","").split(","),r=parseInt(rgbs[0].replace(/[^\d]/g,""),10),g=parseInt(rgbs[1].replace(/[^\d]/g,""),10),b=parseInt(rgbs[2].replace(/[^\d]/g,""),10),a=rgbs.length>3?parseInt(rgbs[4].replace(/[^\d]/g,""),10):void 0;return new _Color(r,g,b,a)}static fromSkribblCode(code){if(code<1e4){const rgb=_Color.skribblColors[code];return _Color.fromRgb(rgb[0],rgb[1],rgb[2])}const hex=(code-1e4).toString(16).padStart(6,"0");return _Color.fromHex(hex)}static fromHsl(h,s,l,alpha){s/=100,l/=100;const k=__name(n=>(n+h/30)%12,"k"),a=s*Math.min(l,1-l),f=__name(n=>l-a*Math.max(-1,Math.min(k(n)-3,Math.min(9-k(n),1))),"f"),r=Math.round(f(0)*255),g=Math.round(f(8)*255),b=Math.round(f(4)*255);return new _Color(r,g,b,alpha)}static fromHsv(h,s,v,a){s/=100,v/=100;const c=v*s,x=c*(1-Math.abs(h/60%2-1)),m=v-c;let r=0,g=0,b=0;return 0<=h&&h<60?(r=c,g=x,b=0):60<=h&&h<120?(r=x,g=c,b=0):120<=h&&h<180?(r=0,g=c,b=x):180<=h&&h<240?(r=0,g=x,b=c):240<=h&&h<300?(r=x,g=0,b=c):300<=h&&h<360&&(r=c,g=0,b=x),r=Math.round((r+m)*255),g=Math.round((g+m)*255),b=Math.round((b+m)*255),new _Color(r,g,b,a)}copy(){return new _Color(this._r,this._g,this._b,this._a)}withAlpha(a){return this._a=a,this}};__name(_Color,"Color"),__publicField(_Color,"skribblColors",[[255,255,255],[0,0,0],[193,193,193],[80,80,80],[239,19,11],[116,11,7],[255,113,0],[194,56,0],[255,228,0],[232,162,0],[0,204,0],[0,70,25],[0,255,145],[0,120,93],[0,178,255],[0,86,158],[35,31,211],[14,8,101],[163,0,186],[85,0,105],[223,105,167],[135,53,84],[255,172,142],[204,119,77],[160,82,45],[99,48,13]]);let Color=_Color;const _CanvasCommandProcessor=class _CanvasCommandProcessor{constructor(_canvasContext){__publicField(this,"_width");__publicField(this,"_height");__publicField(this,"_thicknessMin",4);__publicField(this,"_thicknessMax",40);this._canvasContext=_canvasContext,this._width=_canvasContext.canvas.width,this._height=_canvasContext.canvas.height,this._canvasContext.fillStyle="white",this._canvasContext.fillRect(0,0,this._width,this._height)}processDrawCommand(command){if(command.length<2)throw new Error("Invalid command length smaller than 2");switch(command[0]){case 0:if(command.length<7)throw new Error("Invalid brush command length smaller than 7");this.drawLine(command[3],command[4],command[5],command[6],command[1],command[2]);break;case 1:if(command.length<4)throw new Error("Invalid fill command length smaller than 4");this.floodFill(command[2],command[3],command[1]);break}}clear(){this._canvasContext.clearRect(0,0,this._width,this._height)}exportImage(){return this._canvasContext.getImageData(0,0,this._width,this._height).data}drawLine(x1,y1,x2,y2,color,size){size=size<this._thicknessMin?this._thicknessMin:size>this._thicknessMax?this._thicknessMax:Math.floor(size);const rgb=Color.fromSkribblCode(color).rgb,radius=Math.ceil(size/2),radiusSquared=radius*radius;let startX=this.clamp(Math.floor(x1),-radius,this._width+radius),startY=this.clamp(Math.floor(y1),-radius,this._height+radius),endX=this.clamp(Math.floor(x2),-radius,this._width+radius),endY=this.clamp(Math.floor(y2),-radius,this._height+radius);const minX=Math.min(startX,endX)-radius,minY=Math.min(startY,endY)-radius,maxX=Math.max(startX,endX)+radius,maxY=Math.max(startY,endY)+radius;startX-=minX,startY-=minY,endX-=minX,endY-=minY;const imageData=this._canvasContext.getImageData(minX,minY,maxX-minX,maxY-minY),applyBrush=__name((x,y)=>{for(let offsetX=-radius;offsetX<=radius;offsetX++)for(let offsetY=-radius;offsetY<=radius;offsetY++)if(offsetX*offsetX+offsetY*offsetY<radiusSquared){const pixelIndex=4*((y+offsetY)*imageData.width+x+offsetX);this.setPixel(imageData,pixelIndex,rgb.r,rgb.g,rgb.b)}},"applyBrush");if(startX===endX&&startY===endY)applyBrush(startX,startY);else{applyBrush(startX,startY),applyBrush(endX,endY);const deltaX=Math.abs(endX-startX),deltaY=Math.abs(endY-startY),stepX=startX<endX?1:-1,stepY=startY<endY?1:-1;let error=deltaX-deltaY;for(;startX!==endX||startY!==endY;){const doubleError=error*2;doubleError>-deltaY&&(error-=deltaY,startX+=stepX),doubleError<deltaX&&(error+=deltaX,startY+=stepY),applyBrush(startX,startY)}}this._canvasContext.putImageData(imageData,minX,minY)}floodFill(x,y,color){const imageData=this._canvasContext.getImageData(0,0,this._width,this._height);x=this.clamp(Math.floor(x),0,this._width),y=this.clamp(Math.floor(y),0,this._height);const fill=Color.fromSkribblCode(color).rgb,pixelStack=[[x,y]],targetColor=this.getPixel(imageData,x,y);if(fill.r!==targetColor[0]||fill.g!==targetColor[1]||fill.b!==targetColor[2]){const isMatchingColor=__name(pixelIndex=>{const r=imageData.data[pixelIndex],g=imageData.data[pixelIndex+1],b=imageData.data[pixelIndex+2];return r===targetColor[0]&&g===targetColor[1]&&b===targetColor[2]},"isMatchingColor"),width=imageData.width,height=imageData.height;for(;pixelStack.length>0;){let[x2,y2]=pixelStack.pop()??[-1,-1],pixelIndex=4*(y2*width+x2);for(;y2>=0&&isMatchingColor(pixelIndex);)pixelIndex-=4*width,y2--;pixelIndex+=4*width,y2++;let leftSideFilled=!1,rightSideFilled=!1;for(;y2<height&&isMatchingColor(pixelIndex);)this.setPixel(imageData,pixelIndex,fill.r,fill.g,fill.b),x2>0&&isMatchingColor(pixelIndex-4)?leftSideFilled||(pixelStack.push([x2-1,y2]),leftSideFilled=!0):leftSideFilled&&(leftSideFilled=!1),x2<width-1&&isMatchingColor(pixelIndex+4)?rightSideFilled||(pixelStack.push([x2+1,y2]),rightSideFilled=!0):rightSideFilled&&(rightSideFilled=!1),pixelIndex+=4*width,y2++}this._canvasContext.putImageData(imageData,0,0)}}getPixel(imageData,x,y){const pixelIndex=4*(y*imageData.width+x);return pixelIndex<0||pixelIndex>=imageData.data.length?[0,0,0]:[imageData.data[pixelIndex],imageData.data[pixelIndex+1],imageData.data[pixelIndex+2]]}setPixel(imageData,index,r,g,b){index<0||index>=imageData.data.length||(imageData.data[index]=r,imageData.data[index+1]=g,imageData.data[index+2]=b,imageData.data[index+3]=255)}clamp(value,min,max){return Math.min(Math.max(value,min),max)}};__name(_CanvasCommandProcessor,"CanvasCommandProcessor");let CanvasCommandProcessor=_CanvasCommandProcessor;var omggif={},GifReader_1,GifWriter_1;function GifWriter(buf,width,height,gopts){var p=0,gopts=gopts===void 0?{}:gopts,loop_count=gopts.loop===void 0?null:gopts.loop,global_palette=gopts.palette===void 0?null:gopts.palette;if(width<=0||height<=0||width>65535||height>65535)throw new Error("Width/Height invalid.");function check_palette_and_num_colors(palette){var num_colors=palette.length;if(num_colors<2||num_colors>256||num_colors&num_colors-1)throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");return num_colors}__name(check_palette_and_num_colors,"check_palette_and_num_colors"),buf[p++]=71,buf[p++]=73,buf[p++]=70,buf[p++]=56,buf[p++]=57,buf[p++]=97;var gp_num_colors_pow2=0,background=0;if(global_palette!==null){for(var gp_num_colors=check_palette_and_num_colors(global_palette);gp_num_colors>>=1;)++gp_num_colors_pow2;if(gp_num_colors=1<<gp_num_colors_pow2,--gp_num_colors_pow2,gopts.background!==void 0){if(background=gopts.background,background>=gp_num_colors)throw new Error("Background index out of range.");if(background===0)throw new Error("Background index explicitly passed as 0.")}}if(buf[p++]=width&255,buf[p++]=width>>8&255,buf[p++]=height&255,buf[p++]=height>>8&255,buf[p++]=(global_palette!==null?128:0)|gp_num_colors_pow2,buf[p++]=background,buf[p++]=0,global_palette!==null)for(var i=0,il=global_palette.length;i<il;++i){var rgb=global_palette[i];buf[p++]=rgb>>16&255,buf[p++]=rgb>>8&255,buf[p++]=rgb&255}if(loop_count!==null){if(loop_count<0||loop_count>65535)throw new Error("Loop count invalid.");buf[p++]=33,buf[p++]=255,buf[p++]=11,buf[p++]=78,buf[p++]=69,buf[p++]=84,buf[p++]=83,buf[p++]=67,buf[p++]=65,buf[p++]=80,buf[p++]=69,buf[p++]=50,buf[p++]=46,buf[p++]=48,buf[p++]=3,buf[p++]=1,buf[p++]=loop_count&255,buf[p++]=loop_count>>8&255,buf[p++]=0}var ended=!1;this.addFrame=function(x,y,w,h,indexed_pixels,opts){if(ended===!0&&(--p,ended=!1),opts=opts===void 0?{}:opts,x<0||y<0||x>65535||y>65535)throw new Error("x/y invalid.");if(w<=0||h<=0||w>65535||h>65535)throw new Error("Width/Height invalid.");if(indexed_pixels.length<w*h)throw new Error("Not enough pixels for the frame size.");var using_local_palette=!0,palette=opts.palette;if(palette==null&&(using_local_palette=!1,palette=global_palette),palette==null)throw new Error("Must supply either a local or global palette.");for(var num_colors=check_palette_and_num_colors(palette),min_code_size=0;num_colors>>=1;)++min_code_size;num_colors=1<<min_code_size;var delay=opts.delay===void 0?0:opts.delay,disposal=opts.disposal===void 0?0:opts.disposal;if(disposal<0||disposal>3)throw new Error("Disposal out of range.");var use_transparency=!1,transparent_index=0;if(opts.transparent!==void 0&&opts.transparent!==null&&(use_transparency=!0,transparent_index=opts.transparent,transparent_index<0||transparent_index>=num_colors))throw new Error("Transparent color index.");if((disposal!==0||use_transparency||delay!==0)&&(buf[p++]=33,buf[p++]=249,buf[p++]=4,buf[p++]=disposal<<2|(use_transparency===!0?1:0),buf[p++]=delay&255,buf[p++]=delay>>8&255,buf[p++]=transparent_index,buf[p++]=0),buf[p++]=44,buf[p++]=x&255,buf[p++]=x>>8&255,buf[p++]=y&255,buf[p++]=y>>8&255,buf[p++]=w&255,buf[p++]=w>>8&255,buf[p++]=h&255,buf[p++]=h>>8&255,buf[p++]=using_local_palette===!0?128|min_code_size-1:0,using_local_palette===!0)for(var i2=0,il2=palette.length;i2<il2;++i2){var rgb2=palette[i2];buf[p++]=rgb2>>16&255,buf[p++]=rgb2>>8&255,buf[p++]=rgb2&255}return p=GifWriterOutputLZWCodeStream(buf,p,min_code_size<2?2:min_code_size,indexed_pixels),p},this.end=function(){return ended===!1&&(buf[p++]=59,ended=!0),p},this.getOutputBuffer=function(){return buf},this.setOutputBuffer=function(v){buf=v},this.getOutputBufferPosition=function(){return p},this.setOutputBufferPosition=function(v){p=v}}__name(GifWriter,"GifWriter");function GifWriterOutputLZWCodeStream(buf,p,min_code_size,index_stream){buf[p++]=min_code_size;var cur_subblock=p++,clear_code=1<<min_code_size,code_mask=clear_code-1,eoi_code=clear_code+1,next_code=eoi_code+1,cur_code_size=min_code_size+1,cur_shift=0,cur=0;function emit_bytes_to_buffer(bit_block_size){for(;cur_shift>=bit_block_size;)buf[p++]=cur&255,cur>>=8,cur_shift-=8,p===cur_subblock+256&&(buf[cur_subblock]=255,cur_subblock=p++)}__name(emit_bytes_to_buffer,"emit_bytes_to_buffer");function emit_code(c){cur|=c<<cur_shift,cur_shift+=cur_code_size,emit_bytes_to_buffer(8)}__name(emit_code,"emit_code");var ib_code=index_stream[0]&code_mask,code_table={};emit_code(clear_code);for(var i=1,il=index_stream.length;i<il;++i){var k=index_stream[i]&code_mask,cur_key=ib_code<<8|k,cur_code=code_table[cur_key];if(cur_code===void 0){for(cur|=ib_code<<cur_shift,cur_shift+=cur_code_size;cur_shift>=8;)buf[p++]=cur&255,cur>>=8,cur_shift-=8,p===cur_subblock+256&&(buf[cur_subblock]=255,cur_subblock=p++);next_code===4096?(emit_code(clear_code),next_code=eoi_code+1,cur_code_size=min_code_size+1,code_table={}):(next_code>=1<<cur_code_size&&++cur_code_size,code_table[cur_key]=next_code++),ib_code=k}else ib_code=cur_code}return emit_code(ib_code),emit_code(eoi_code),emit_bytes_to_buffer(1),cur_subblock+1===p?buf[cur_subblock]=0:(buf[cur_subblock]=p-cur_subblock-1,buf[p++]=0),p}__name(GifWriterOutputLZWCodeStream,"GifWriterOutputLZWCodeStream");function GifReader(buf){var p=0;if(buf[p++]!==71||buf[p++]!==73||buf[p++]!==70||buf[p++]!==56||(buf[p++]+1&253)!==56||buf[p++]!==97)throw new Error("Invalid GIF 87a/89a header.");var width=buf[p++]|buf[p++]<<8,height=buf[p++]|buf[p++]<<8,pf0=buf[p++],global_palette_flag=pf0>>7,num_global_colors_pow2=pf0&7,num_global_colors=1<<num_global_colors_pow2+1;buf[p++],buf[p++];var global_palette_offset=null,global_palette_size=null;global_palette_flag&&(global_palette_offset=p,global_palette_size=num_global_colors,p+=num_global_colors*3);var no_eof=!0,frames=[],delay=0,transparent_index=null,disposal=0,loop_count=null;for(this.width=width,this.height=height;no_eof&&p<buf.length;)switch(buf[p++]){case 33:switch(buf[p++]){case 255:if(buf[p]!==11||buf[p+1]==78&&buf[p+2]==69&&buf[p+3]==84&&buf[p+4]==83&&buf[p+5]==67&&buf[p+6]==65&&buf[p+7]==80&&buf[p+8]==69&&buf[p+9]==50&&buf[p+10]==46&&buf[p+11]==48&&buf[p+12]==3&&buf[p+13]==1&&buf[p+16]==0)p+=14,loop_count=buf[p++]|buf[p++]<<8,p++;else for(p+=12;;){var block_size=buf[p++];if(!(block_size>=0))throw Error("Invalid block size");if(block_size===0)break;p+=block_size}break;case 249:if(buf[p++]!==4||buf[p+4]!==0)throw new Error("Invalid graphics extension block.");var pf1=buf[p++];delay=buf[p++]|buf[p++]<<8,transparent_index=buf[p++],pf1&1||(transparent_index=null),disposal=pf1>>2&7,p++;break;case 254:for(;;){var block_size=buf[p++];if(!(block_size>=0))throw Error("Invalid block size");if(block_size===0)break;p+=block_size}break;default:throw new Error("Unknown graphic control label: 0x"+buf[p-1].toString(16))}break;case 44:var x=buf[p++]|buf[p++]<<8,y=buf[p++]|buf[p++]<<8,w=buf[p++]|buf[p++]<<8,h=buf[p++]|buf[p++]<<8,pf2=buf[p++],local_palette_flag=pf2>>7,interlace_flag=pf2>>6&1,num_local_colors_pow2=pf2&7,num_local_colors=1<<num_local_colors_pow2+1,palette_offset=global_palette_offset,palette_size=global_palette_size,has_local_palette=!1;if(local_palette_flag){var has_local_palette=!0;palette_offset=p,palette_size=num_local_colors,p+=num_local_colors*3}var data_offset=p;for(p++;;){var block_size=buf[p++];if(!(block_size>=0))throw Error("Invalid block size");if(block_size===0)break;p+=block_size}frames.push({x,y,width:w,height:h,has_local_palette,palette_offset,palette_size,data_offset,data_length:p-data_offset,transparent_index,interlaced:!!interlace_flag,delay,disposal});break;case 59:no_eof=!1;break;default:throw new Error("Unknown gif block: 0x"+buf[p-1].toString(16))}this.numFrames=function(){return frames.length},this.loopCount=function(){return loop_count},this.frameInfo=function(frame_num){if(frame_num<0||frame_num>=frames.length)throw new Error("Frame index out of range.");return frames[frame_num]},this.decodeAndBlitFrameBGRA=function(frame_num,pixels){var frame=this.frameInfo(frame_num),num_pixels=frame.width*frame.height,index_stream=new Uint8Array(num_pixels);GifReaderLZWOutputIndexStream(buf,frame.data_offset,index_stream,num_pixels);var palette_offset2=frame.palette_offset,trans=frame.transparent_index;trans===null&&(trans=256);var framewidth=frame.width,framestride=width-framewidth,xleft=framewidth,opbeg=(frame.y*width+frame.x)*4,opend=((frame.y+frame.height)*width+frame.x)*4,op=opbeg,scanstride=framestride*4;frame.interlaced===!0&&(scanstride+=width*4*7);for(var interlaceskip=8,i=0,il=index_stream.length;i<il;++i){var index=index_stream[i];if(xleft===0&&(op+=scanstride,xleft=framewidth,op>=opend&&(scanstride=framestride*4+width*4*(interlaceskip-1),op=opbeg+(framewidth+framestride)*(interlaceskip<<1),interlaceskip>>=1)),index===trans)op+=4;else{var r=buf[palette_offset2+index*3],g=buf[palette_offset2+index*3+1],b=buf[palette_offset2+index*3+2];pixels[op++]=b,pixels[op++]=g,pixels[op++]=r,pixels[op++]=255}--xleft}},this.decodeAndBlitFrameRGBA=function(frame_num,pixels){var frame=this.frameInfo(frame_num),num_pixels=frame.width*frame.height,index_stream=new Uint8Array(num_pixels);GifReaderLZWOutputIndexStream(buf,frame.data_offset,index_stream,num_pixels);var palette_offset2=frame.palette_offset,trans=frame.transparent_index;trans===null&&(trans=256);var framewidth=frame.width,framestride=width-framewidth,xleft=framewidth,opbeg=(frame.y*width+frame.x)*4,opend=((frame.y+frame.height)*width+frame.x)*4,op=opbeg,scanstride=framestride*4;frame.interlaced===!0&&(scanstride+=width*4*7);for(var interlaceskip=8,i=0,il=index_stream.length;i<il;++i){var index=index_stream[i];if(xleft===0&&(op+=scanstride,xleft=framewidth,op>=opend&&(scanstride=framestride*4+width*4*(interlaceskip-1),op=opbeg+(framewidth+framestride)*(interlaceskip<<1),interlaceskip>>=1)),index===trans)op+=4;else{var r=buf[palette_offset2+index*3],g=buf[palette_offset2+index*3+1],b=buf[palette_offset2+index*3+2];pixels[op++]=r,pixels[op++]=g,pixels[op++]=b,pixels[op++]=255}--xleft}}}__name(GifReader,"GifReader");function GifReaderLZWOutputIndexStream(code_stream,p,output,output_length){for(var min_code_size=code_stream[p++],clear_code=1<<min_code_size,eoi_code=clear_code+1,next_code=eoi_code+1,cur_code_size=min_code_size+1,code_mask=(1<<cur_code_size)-1,cur_shift=0,cur=0,op=0,subblock_size=code_stream[p++],code_table=new Int32Array(4096),prev_code=null;;){for(;cur_shift<16&&subblock_size!==0;)cur|=code_stream[p++]<<cur_shift,cur_shift+=8,subblock_size===1?subblock_size=code_stream[p++]:--subblock_size;if(cur_shift<cur_code_size)break;var code=cur&code_mask;if(cur>>=cur_code_size,cur_shift-=cur_code_size,code===clear_code){next_code=eoi_code+1,cur_code_size=min_code_size+1,code_mask=(1<<cur_code_size)-1,prev_code=null;continue}else if(code===eoi_code)break;for(var chase_code=code<next_code?code:prev_code,chase_length=0,chase=chase_code;chase>clear_code;)chase=code_table[chase]>>8,++chase_length;var k=chase,op_end=op+chase_length+(chase_code!==code?1:0);if(op_end>output_length){console.log("Warning, gif stream longer than expected.");return}output[op++]=k,op+=chase_length;var b=op;for(chase_code!==code&&(output[op++]=k),chase=chase_code;chase_length--;)chase=code_table[chase],output[--b]=chase&255,chase>>=8;prev_code!==null&&next_code<4096&&(code_table[next_code++]=prev_code<<8|k,next_code>=code_mask+1&&cur_code_size<12&&(++cur_code_size,code_mask=code_mask<<1|1)),prev_code=code}return op!==output_length&&console.log("Warning, gif stream shorter than expected."),output}__name(GifReaderLZWOutputIndexStream,"GifReaderLZWOutputIndexStream");try{GifWriter_1=omggif.GifWriter=GifWriter,GifReader_1=omggif.GifReader=GifReader}catch{}const _GifEncoder=class _GifEncoder{constructor(colorSet,frameCount){__publicField(this,"width",800);__publicField(this,"height",600);__publicField(this,"buffer");__publicField(this,"gifWriter");__publicField(this,"frameCount",0);__publicField(this,"colors");this.buffer=new Uint8Array(this.width*this.height*5*frameCount),this.gifWriter=new GifWriter_1(this.buffer,this.width,this.height,{loop:1});const colorToKey=__name(color=>color.rgbArray.slice(0,3).join(","),"colorToKey"),white=Color.fromRgb(255,255,255);this.colors=new Map(colorSet.values().map((color,index)=>[color.rgbArray.slice(0,3).toString(),{color,index}])),this.colors.has(colorToKey(white))||this.colors.set(colorToKey(white),{color:white,index:this.colors.size});const requiredSize=__name(n=>Math.pow(2,Math.ceil(Math.log2(n))),"nextPowerOfTwo")(this.colors.size);this.colors.size<requiredSize&&new Array(requiredSize-this.colors.size).fill(white).forEach((color,index)=>{this.colors.set(`fill-${index}`,{color,index:this.colors.size})})}get palette(){return[...this.colors.values()].map(c=>{const rgb=c.color.rgbArray;return rgb[2]|rgb[1]<<8|rgb[0]<<16})}mapToPaletteIndex(color){var _a;return((_a=this.colors.get(color.toString()))==null?void 0:_a.index)??0}addFrame(imageData,delayMs){const palette=this.palette,indexedPixels=[];for(let i=0;i<imageData.length;i+=4){const color=[imageData[i],imageData[i+1],imageData[i+2]];indexedPixels.push(this.mapToPaletteIndex(color))}this.gifWriter.addFrame(0,0,this.width,this.height,indexedPixels,{delay:delayMs/10,palette,disposal:2}),this.frameCount++}finalize(){if(this.frameCount===0)throw new Error("No frames added to the GIF.");const gifData=this.buffer.subarray(0,this.gifWriter.end());return new Blob([gifData],{type:"image/gif"})}};__name(_GifEncoder,"GifEncoder");let GifEncoder=_GifEncoder;function createGif(processor,commands,commandResolution,frameDelay,frameCount,onFrameRendered){const skribblColorCodes=new Set(commands.map(c=>c[1]));if(skribblColorCodes.size>256)throw new Error("Too many colors in the skribbl commands to render gif");const colorSet=new Set(skribblColorCodes.values().map(c=>Color.fromSkribblCode(c))),gifEncoder=new GifEncoder(colorSet,frameCount);for(let i=0;i<commands.length;i++)if(processor.processDrawCommand(commands[i]),i%commandResolution===0){const image=processor.exportImage();gifEncoder.addFrame(image,frameDelay),onFrameRendered==null||onFrameRendered(i,commands.length)}return gifEncoder.addFrame(processor.exportImage(),2e3),gifEncoder.finalize()}__name(createGif,"createGif");const _TypedWorkerExecutor=class _TypedWorkerExecutor{constructor(workerUrl,_parent){__publicField(this,"_worker");this._parent=_parent,this._worker=new Worker(workerUrl,{type:"module"}),this._worker.addEventListener("message",event=>{const{type,methodName,args}=event.data;type==="notification"&&this._parent[methodName](...args)})}async run(methodName,...args){return new Promise(resolve=>{const messageId=Math.random().toString(36).slice(10);this._worker.addEventListener("message",event=>{event.data.messageId===messageId&&event.data.type==="result"&&resolve(event.data.result)}),this._worker.postMessage({methodName,args,messageId})})}};__name(_TypedWorkerExecutor,"TypedWorkerExecutor");let TypedWorkerExecutor=_TypedWorkerExecutor;const _TypedWorker=class _TypedWorker{constructor(worker){this.worker=worker,addEventListener("message",async event=>{console.log(event);const{methodName,args,messageId}=event.data,result=await this.worker[methodName](...args);postMessage({type:"result",messageId,result})})}send(methodName,...args){postMessage({type:"notification",methodName,args})}};__name(_TypedWorker,"TypedWorker");let TypedWorker=_TypedWorker;const gifRendererWorker={renderGif(commands,duration){console.log("Rendering gif",commands,duration);const context=new OffscreenCanvas(800,600).getContext("2d",{willReadFrequently:!0});if(!context)throw new Error("Failed to get 2d context");const processor=new CanvasCommandProcessor(context),frameDelay=50,frameCount=Math.ceil(duration/frameDelay),commandResolution=Math.max(1,Math.floor(commands.length/frameCount));return createGif(processor,commands,commandResolution,frameDelay,frameCount,(frameIndex,totalFrames)=>parent.send("frameRendered",frameIndex,totalFrames))}},parent=new TypedWorker(gifRendererWorker);export{Color as C,TypedWorkerExecutor as T,gifRendererWorker as g};
//# sourceMappingURL=gif-renderer.worker.js.map
